[{"C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\index.js":"1","C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\App.js":"2","C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\reportWebVitals.js":"3","C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\data.js":"4","C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\pages\\Detail.js":"5"},{"size":626,"mtime":1660888084095,"results":"6","hashOfConfig":"7"},{"size":3434,"mtime":1661269573908,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1660660880548,"results":"9","hashOfConfig":"7"},{"size":423,"mtime":1660741872535,"results":"10","hashOfConfig":"7"},{"size":3171,"mtime":1661266273896,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"10imoes",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"15"},"C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\index.js",[],[],[],"C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\App.js",["29","30"],[],"C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\reportWebVitals.js",[],[],"C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\data.js",[],[],"C:\\Users\\Rosa\\workspace-vscode\\codingApple\\REACT_codingApple\\shop\\src\\pages\\Detail.js",["31","32","33"],[],"import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\n\r\n// class Detail2 extends React.Component {\r\n//   componentDidMount() {\r\n//     // 컴포넌트 mount시 여기코드 실행됨\r\n//   }\r\n//   componentDidUpdate() {\r\n//     // 컴포넌트 update시 여기코드 실행됨\r\n//   }\r\n//   componentWillUnmount() {\r\n//     // 컴포넌트 unmount시 여기코드 실행됨\r\n//   }\r\n// };\r\n\r\nlet YellowBtn = styled.button`\r\n  background : ${ props => props.bg };\r\n  color :${ props => props.bg == 'blue'? 'white' : 'black' };\r\n  padding : 10px;\r\n`\r\n// let NewBtn = styled.button(YellowBtn)`\r\n//   // 기존 스타일 복사 가능\r\n// `\r\n\r\nlet Box = styled.div`\r\n  background : grey;\r\n  padding : 20px;\r\n`\r\n\r\nfunction Detail(props) {\r\n  let [alert, setAlert] = useState(true)\r\n  \r\n    // 컴포넌트에 갈고리 다는법\r\n    useEffect(()=>{\r\n      // 타이머 주는법\r\n      let a = setTimeout(()=> {setAlert(false)}, 2000)\r\n      // mount, update시 코드 실행\r\n      console.log('안녕')\r\n\r\n      // 서버로 데이터 요청하는 코드(2초 소요) : 2초 사이에 재렌더링 되면 계속 요청되어 버그 많아질듯\r\n      // 기존 데이터 요청을 제거할 필요\r\n\r\n      // useEffect 동작 전에 실행 return()=>{} : clean up function\r\n      // 타이머 제거해주는 함수\r\n      // mount시 실행안됨. unmount시 실행됨\r\n      return ()=> {\r\n        clearTimeout(a)\r\n      }\r\n    }, []) \r\n\r\n    /* 빡통식 정리법 */\r\n    // 1. 재렌더링마다 코드 실행하고 싶으면\r\n    useEffect(()=>{ })\r\n    // 2. mount시 1회 코드실행하고 싶으면\r\n    useEffect(()=>{ }, [])\r\n    // 3. unmount시 1회 코드 실행하고 싶으면\r\n    useEffect(()=>{ \r\n        return()=>{\r\n\r\n        }\r\n    }, [])\r\n    // 4. useEffect 실행 전에 뭔가 실행하려면 언제나 return()=>{ } \r\n    // useEffect 내부에 clean up function을 써준다\r\n    // 5. 특정 state 변경시에만 실행하려면 [state명] : dependency[]에 변수명 넣어서 \r\n   \r\n\r\n\r\n  \r\n  // 컴포넌트 업데이트 = 재렌더링 \r\n  let [count, setCount] = useState(0)\r\n\r\n  let {id} = useParams();\r\n  console.log(id);\r\n\r\n  return(\r\n    <div className=\"container\">\r\n      { \r\n        alert == true\r\n      ? <div className=\"alert alert-warning\">\r\n        2초이내 구매시 할인\r\n      </div>\r\n      : null\r\n      }\r\n      {count}\r\n      <button onClick={()=> { setCount(count+1) }}>버튼</button>\r\n      <Box>\r\n        <YellowBtn bg=\"blue\">버튼</YellowBtn>\r\n        <YellowBtn bg=\"orange\">버튼</YellowBtn>\r\n      </Box>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\r\n          <p>{props.shoes[id].content}</p>\r\n          <p>{props.shoes[id].price}</p>\r\n          <button className=\"btn btn-danger\">주문하기</button> \r\n        </div>\r\n      </div>\r\n    </div>   \r\n  )\r\n} \r\n\r\nexport default Detail;",{"ruleId":"34","severity":1,"message":"35","line":3,"column":10,"nodeType":"36","messageId":"37","endLine":3,"endColumn":16},{"ruleId":"38","severity":1,"message":"39","line":107,"column":7,"nodeType":"40","endLine":107,"endColumn":97},{"ruleId":"41","severity":1,"message":"42","line":20,"column":31,"nodeType":"43","messageId":"44","endLine":20,"endColumn":33},{"ruleId":"41","severity":1,"message":"42","line":80,"column":15,"nodeType":"43","messageId":"44","endLine":80,"endColumn":17},{"ruleId":"38","severity":1,"message":"39","line":94,"column":11,"nodeType":"40","endLine":94,"endColumn":84},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]